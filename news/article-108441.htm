<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnforandroid.github.io/news/article-108441.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用</title>
        <meta name="description" content="思路浅析 　　在我们分享的 Azure Terraform 系列文中有介绍到关于 Terraform 的状态文件远程存储的问题，我们在&nbsp; Azure DevOps Pipeline 的 Ta" />
        <link rel="icon" href="/assets/website/img/trojannode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN安卓 订阅机场节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnforandroid.github.io/news/article-108441.htm" />
    <meta property="og:site_name" content="VPN安卓 订阅机场节点官网" />
    <meta property="og:title" content="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用" />
    <meta property="og:image" content="https://vpnforandroid.github.io/uploads/20240807/8b455927932ebf7846a62e7eca920b2b.webp" />
        <meta property="og:release_date" content="2025-04-30T09:35:40" />
    <meta property="og:updated_time" content="2025-04-30T09:35:40" />
        <meta property="og:description" content="思路浅析 　　在我们分享的 Azure Terraform 系列文中有介绍到关于 Terraform 的状态文件远程存储的问题，我们在&nbsp; Azure DevOps Pipeline 的 Ta" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/trojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/trojannode/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XZJRB5RDTD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XZJRB5RDTD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top ">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/">
                        <span class="logo">VPN安卓</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用</h2>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<h3>思路浅析</h3> <p>　　在我们分享的 Azure Terraform 系列文中有介绍到关于 Terraform 的状态文件远程存储的问题，我们在&nbsp; Azure DevOps Pipeline 的 Task Job 加&nbsp;azure_cli_script 执行内联脚本（该脚本帮我们创建好 Terraform 状态文件存储所需要的 Azure Resource Group、 Azure Storage Account、Azure KeyVault 等资源）。大家需要注意的是，内联脚本中有使用动态变量，该变量临时存储 Azure Storage Account 的 Account Key，如下图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/638e3c1577944b4483be10d11d53087e.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <p>本篇文章，我继续带领大家分析如何在 Azure DevOps Pipeline 运行中创建使用动态临时变量，使用动态临时变量替换 Azure Pipeline 管道变量。</p> <p><strong>项目整体架构图</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a30a11eebdd0c4b137635312dd660877.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <h3>Pipeline 变量定义、输出</h3> <p>在此阶段，我们需要利用&nbsp;azure_cli_script 任务，创建动态临时变量，输出参数，其中最主要的是将动态临时变量输出，Task yaml 如下所示</p> <p><strong>输出的变量用于同一个 stage，不同 job</strong></p> <div class="cnblogs_code"> <pre>-<span style="color: rgba(0, 0, 0, 1)"> stage: script   jobs:</span>-<span style="color: rgba(0, 0, 0, 1)"> job: azure_cli_script      steps:</span>- task: AzureCLI@<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">         displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Azure CLI :Create Storage Account，Key Vault And Set KeyVault Secret</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">         name: 'output_variable'</span></strong><span style="color: rgba(0, 0, 0, 1)">         inputs:           azureSubscription:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Microsoft Azure Subscription(xxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           scriptType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">bash</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">           addSpnToEnvironment: true</span></strong><span style="color: rgba(0, 0, 0, 1)">           scriptLocation:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inlineScript</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inlineScript:</span>|<span style="color: rgba(0, 0, 0, 1)">               # create azure resource group               az group create</span>--location eastasia --<span style="color: rgba(0, 0, 0, 1)">name $(terraform_rg)                      # create azure storage account               az storage account create</span>--name $(storage_account) --resource-group $(terraform_rg) --location eastasia --<span style="color: rgba(0, 0, 0, 1)">sku Standard_LRS                      # create storage account container</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> tf state                az storage container create</span>--name $(storage_account_container) --account-<span style="color: rgba(0, 0, 0, 1)">name $(storage_account)                      # query storage key and set variable<strong><span style="color: rgba(255, 0, 0, 1)">ACCOUNT_KEY</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">=$(az storage account keys list --resource-group $(terraform_rg) --account-name $(storage_account) --query "[?keyName == 'key1'][value]" --</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">output tsv)</span></strong>                      # create azure keyvault               az keyvault create</span>--name $(keyvault) --resource-group $(terraform_rg) --location eastasia --enable-soft-delete<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">                      # set keyvault secret,secret value is ACCOUNT_KEY               az keyvault secret set</span>--name $(keyvault_sc) --vault-name $(keyvault)  --<span style="color: rgba(0, 0, 0, 1)">value $ACCOUNT_KEY                # set secret varivale and add to environment</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "##vso[task.setvariable variable=ACCOUNT_KEY;isOutput=true]$ACCOUNT_KEY"</span></strong><span style="color: rgba(0, 0, 0, 1)">               #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">##vso[task.setvariable variable=ACCOUNT_KEY;issecret=true;isOutput=true]$ACCOUNT_KEY</span><span style="color: rgba(128, 0, 0, 1)">"</span>            -<span style="color: rgba(0, 0, 0, 1)"> job: same_stage_echo<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: azure_cli_script      variables:        ACCOUNT_KEY: $[dependencies.azure_cli_script.outputs[</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">'output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>      steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">          displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in different jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">          inputs:            targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">            script:</span>|<span style="color: rgba(0, 0, 0, 1)">              #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong></pre> </div> <p><strong>输出变量用于不同&nbsp;stage</strong></p> <div class="cnblogs_code"> <pre>-<span style="color: rgba(0, 0, 0, 1)"> stage: echo_varibale<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: script   jobs:</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">- job: different_stage_echo       variables:         ACCOUNT_KEY: $[stageDependencies.script.azure_cli_script.outputs['output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>       steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">           displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in same jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inputs:             targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">             script:</span>|<span style="color: rgba(0, 0, 0, 1)">               #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong></pre> </div> <p>以下为完整的&nbsp; &nbsp;azure-pipelines-1.yaml</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># Starter pipeline # Start with a minimal pipeline that you can customize to build and deploy your code. # Add steps that build, run tests, deploy, and</span><span style="color: rgba(0, 0, 255, 1)">more</span><span style="color: rgba(0, 0, 0, 1)">: # https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">aka.ms/yaml</span><span style="color: rgba(0, 0, 0, 1)"> trigger:</span>-<span style="color: rgba(0, 0, 0, 1)"> remote_stats  pool:   vmImage: ubuntu</span>-<span style="color: rgba(0, 0, 0, 1)">latest  stages:</span>-<span style="color: rgba(0, 0, 0, 1)"> stage: script   jobs:</span>-<span style="color: rgba(0, 0, 0, 1)"> job: azure_cli_script      steps:</span>- task: AzureCLI@<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">         displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Azure CLI :Create Storage Account，Key Vault And Set KeyVault Secret</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">         name: 'output_variable'</span></strong><span style="color: rgba(0, 0, 0, 1)">         inputs:           azureSubscription:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Microsoft Azure Subscription(xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx)</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           scriptType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">bash</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">           addSpnToEnvironment: true</span></strong><span style="color: rgba(0, 0, 0, 1)">           scriptLocation:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inlineScript</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inlineScript:</span>|<span style="color: rgba(0, 0, 0, 1)">               # create azure resource group               az group create</span>--location eastasia --<span style="color: rgba(0, 0, 0, 1)">name $(terraform_rg)                      # create azure storage account               az storage account create</span>--name $(storage_account) --resource-group $(terraform_rg) --location eastasia --<span style="color: rgba(0, 0, 0, 1)">sku Standard_LRS                      # create storage account container</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> tf state                az storage container create</span>--name $(storage_account_container) --account-<span style="color: rgba(0, 0, 0, 1)">name $(storage_account)                      # query storage key and set variable<strong><span style="color: rgba(255, 0, 0, 1)">ACCOUNT_KEY</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">=$(az storage account keys list --resource-group $(terraform_rg) --account-name $(storage_account) --query "[?keyName == 'key1'][value]" --</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">output tsv)</span></strong>                      # create azure keyvault               az keyvault create</span>--name $(keyvault) --resource-group $(terraform_rg) --location eastasia --enable-soft-delete<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">                      # set keyvault secret,secret value is ACCOUNT_KEY               az keyvault secret set</span>--name $(keyvault_sc) --vault-name $(keyvault)  --<span style="color: rgba(0, 0, 0, 1)">value $ACCOUNT_KEY                # set secret varivale and add to environment</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "##vso[task.setvariable variable=ACCOUNT_KEY;isOutput=true]$ACCOUNT_KEY"               #echo "##vso[task.setvariable variable=ACCOUNT_KEY;issecret=true;isOutput=true]$ACCOUNT_KEY"</span></strong>            -<span style="color: rgba(0, 0, 0, 1)"> job: same_stage_echo<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: azure_cli_script      variables:        ACCOUNT_KEY: $[dependencies.azure_cli_script.outputs[</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">'output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>      steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">          displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in different jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">          inputs:            targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">            script:</span>|<span style="color: rgba(0, 0, 0, 1)">              #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong>  -<span style="color: rgba(0, 0, 0, 1)"> stage: echo_varibale<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: script   jobs:</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">- job: different_stage_echo       variables:         ACCOUNT_KEY: $[stageDependencies.script.azure_cli_script.outputs['output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>       steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">           displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in same jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inputs:             targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">             script:</span>|<span style="color: rgba(0, 0, 0, 1)">               #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong></pre> </div> <p><span style="color: rgba(255, 102, 0, 1)"><strong>*****重点*****：管道内变量与动态临时变量使用区别</strong></span></p> <p><span style="color: rgba(255, 102, 0, 1)"><strong>Pipeline 管道内使用方式：$(变量名称)</strong></span></p> <p><span style="color: rgba(255, 102, 0, 1)"><strong>动态临时变量使用方式：$变量名称</strong></span></p> <h3>配置 Pipeline 管道变量</h3> <p>使用 Azure CLI 创建 Azure Storage Account、Azure Key Vault 的内联脚本中使用管理内变量控制参数</p> <table border="0"> <tbody> <tr> <td><span style="color: rgba(0, 0, 255, 1)"><strong><span style="background-color: rgba(255, 255, 255, 1)">变量名</span></strong></span></td> <td><span style="color: rgba(0, 0, 255, 1)"><strong><span style="background-color: rgba(255, 255, 255, 1)">变量值</span></strong></span></td> </tr> <tr> <td>terraform_rg</td> <td>Web_Test_TF_RG</td> </tr> <tr> <td>storage_account</td> <td>cnbatetfstorage</td> </tr> <tr> <td>storage_account_container</td> <td>tf-state</td> </tr> <tr> <td>keyvault</td> <td>cnbate-terraform-kv</td> </tr> <tr> <td>keyvault_sc</td> <td>terraform-stste-storage-key</td> </tr> <tr> <td>container_key</td> <td>cnbate.tf.stats</td> </tr> </tbody> </table> <h3>运行 Pipeline，查看配置输出</h3> <p>由于我们已经在 azure-pipelines-1.yaml 文件中指定了工作分支 “remote_stats”，当我们只要触发 “remote_stats” 分支的 “push” 或者 “pull_request” 动作都会触发 Azure DevOps Pipeline 的运行。</p> <p><strong>相同 stage 内的 job 输出</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e0e954a6d0cd4710f24f96553a5e4e35.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <p><strong>不同 stage 的 job 输出</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c84cbd4ebade466e0781853e7967c3fd.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <h3>总结</h3> <p>本期实验，我们学习了如何在&nbsp;Azure DevOps Pipeline 运行期间创建的动态临时变量以及变量的输出，使得我们更加灵活的在任意 job 中声明自定义的动态临时变量，并将动态临时变量应用到任意的 job 中，这种方式有区别与Pipeline 管道内变量，尤其是在定义阶段和使用语法上，详细内容参考官方文档。</p> <p>在脚本中设置变量：https://docs.microsoft.com/en-us/azure/devops/pipelines/process/set-variables-scripts</p> <p>github 代码地址：https://github.com/yunqian44/Terraform_Cnbate_Traffic_Manager</p> <p>Terraform 在 Azure DevOps 中的使用系列：https://www.cnblogs.com/AllenMaster/category/1876925.html</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-107604.htm">宠物狗粮上市公司排名（宠物狗粮上市公司排名榜）</a></p>
                                        <p>下一个：<a href="/news/article-108442.htm">宠物医院好评语30字通用怎么写 宠物医院好评语30字通用怎么写的</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-101111.htm" title="猫打疫苗和不打疫苗的区别（猫疫苗必须打吗 知乎）">猫打疫苗和不打疫苗的区别（猫疫苗必须打吗 知乎）</a></li>
                        <li class="py-2"><a href="/news/article-109284.htm" title="详解Android如何实现自定义的动画曲线_Android_">详解Android如何实现自定义的动画曲线_Android_</a></li>
                        <li class="py-2"><a href="/news/article-93776.htm" title="领养宠物是啥意思啊（领养宠物须知）">领养宠物是啥意思啊（领养宠物须知）</a></li>
                        <li class="py-2"><a href="/news/article-98248.htm" title="戴尔成就bios设置ssd启动项（戴尔最新bios设置ssd）">戴尔成就bios设置ssd启动项（戴尔最新bios设置ssd）</a></li>
                        <li class="py-2"><a href="/news/article-91458.htm" title="动物疫苗在哪里打的呢多少钱啊（动物疫苗在哪里打的呢多少钱啊）">动物疫苗在哪里打的呢多少钱啊（动物疫苗在哪里打的呢多少钱啊）</a></li>
                        <li class="py-2"><a href="/news/article-89321.htm" title="HTML5 Canvas 水流样式 Loading 动画">HTML5 Canvas 水流样式 Loading 动画</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-14-free-high-speed-nodes.htm" title="VPN安卓 | 4月14日20.5M/S|免费Shadowrocket/V2ray/Clash/SSR免费节点订阅分享">VPN安卓 | 4月14日20.5M/S|免费Shadowrocket/V2ray/Clash/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-105767.htm" title="vue项目实现自定义tabBar组件的封装">vue项目实现自定义tabBar组件的封装</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-9-free-v2ray.htm" title="VPN安卓 | 4月9日21.1M/S|免费Clash/V2ray/SSR/Shadowrocket免费节点订阅分享">VPN安卓 | 4月9日21.1M/S|免费Clash/V2ray/SSR/Shadowrocket免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-109285.htm" title="动物疫苗注射方法视频教程图片（动物疫苗接种方法有哪些）">动物疫苗注射方法视频教程图片（动物疫苗接种方法有哪些）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="me-md-auto text-center text-md-start">
                <div class="copyright">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">VPN安卓 订阅机场节点官网</a> 版权所有 Powered by WordPress
                </div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/trojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/trojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/trojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>