<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnforandroid.github.io/news/article-62478.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Vue结合ElementUI上传Base64编码后的图片实例_vue.js</title>
        <meta name="description" content="目录  ElementUI上传Base64编码后的图片  安装ElementUI 按需引入(当然如果需要你也可以全部引入) 上传实现   ElementUI把上传的图片转为Base64     Ele" />
        <link rel="icon" href="/assets/website/img/trojannode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN安卓 订阅机场节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnforandroid.github.io/news/article-62478.htm" />
    <meta property="og:site_name" content="VPN安卓 订阅机场节点官网" />
    <meta property="og:title" content="Vue结合ElementUI上传Base64编码后的图片实例_vue.js" />
    <meta property="og:image" content="https://vpnforandroid.github.io/uploads/20240807/ff0ebe3906840a9e154cb1487cffd99b.webp" />
        <meta property="og:release_date" content="2025-02-24T09:18:29" />
    <meta property="og:updated_time" content="2025-02-24T09:18:29" />
        <meta property="og:description" content="目录  ElementUI上传Base64编码后的图片  安装ElementUI 按需引入(当然如果需要你也可以全部引入) 上传实现   ElementUI把上传的图片转为Base64     Ele" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Vue结合ElementUI上传Base64编码后的图片实例_vue.js">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/trojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/trojannode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XZJRB5RDTD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XZJRB5RDTD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top ">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/">
                        <span class="logo">VPN安卓</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Vue结合ElementUI上传Base64编码后的图片实例_vue.js</h2>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">ElementUI上传Base64编码后的图片</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_0_0" rel="nofollow">安装ElementUI</a></li> <li><a href="#_lab2_0_1" rel="nofollow">按需引入(当然如果需要你也可以全部引入)</a></li> <li><a href="#_lab2_0_2" rel="nofollow">上传实现 </a></li> </ul> <li><a href="#_label1" rel="nofollow">ElementUI把上传的图片转为Base64</a></li> <ul class="second_class_ul"></ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>ElementUI上传Base64编码后的图片</h2> <p>自我认为ElementUI还是一个很不错的写手机端的组件，所以这次做小项目的时候就用了ElementUI的Upload组件来实现图片的上传，不过ElementUI组件的上传图片更易于实现图片以File文件的形式实现，但是这次我需要把图片转换为base64编码来实现图片的上传。</p> <p class="maodian"><a name="_lab2_0_0" rel="nofollow"></a></p> <h3>安装ElementUI</h3> <div class="ay1code"> <pre class="brush:js;">npm i element-ui -S</pre> </div> <p class="maodian"><a name="_lab2_0_1" rel="nofollow"></a></p> <h3>按需引入(当然如果需要你也可以全部引入)</h3> <div class="ay1code"> <pre class="brush:js;">import { Upload } from 'element-ui'  import 'element-ui/lib/theme-chalk/index.css'  Vue.use(Upload);</pre> </div> <p class="maodian"><a name="_lab2_0_2" rel="nofollow"></a></p> <h3>上传实现 </h3> <div class="ay1code"> <pre class="brush:xhtml;">&lt;template&gt;      &lt;div&gt;         &lt;el-upload            class="avatar-uploader"            :action="actionUrl"            :show-file-list="false"            :on-change="getFile"&gt;            &lt;img v-if="imageUrl" ref="phoUrl" :src="imageUrl" class="avatar"&gt;            &lt;i v-else class="el-icon-plus avatar-uploader-icon"&gt;&lt;/i&gt;          &lt;/el-upload&gt;      &lt;/div&gt;  &lt;/template&gt;</pre> </div> <div class="ay1code"> <pre class="brush:js;">&lt;script&gt;  import {Toast} from "mint-ui";  export default {     data() {        return {         actionUrl:'',         imageUrl:'', //上传图片        };      },      methods: {       getBase64(file){  //把图片转成base64编码           return new Promise(function(resolve,reject){               let reader=new FileReader();               let imgResult="";               reader.readAsDataURL(file);               reader.onload=function(){                   imgResult=reader.result;               };               reader.onerror=function(error){                   reject(error);               };               reader.onloadend=function(){                   resolve(imgResult);               }           })       },       getFile(file,fileList){  //上传头像         this.getBase64(file.raw).then(res=&gt;{             this.$http.post('home/ImgUpload',{"img":res}).then(result=&gt;{                 if(result.body.status===200){                     this.imageUrl=result.body.data;                 }else{                     Toast('图片上传失败');                 }             })         })       }      }  }  &lt;/script&gt;</pre> </div> <div class="ay1code"> <pre class="brush:css;">&lt;style&gt;    .avatar-uploader .el-upload {      border: 1px dashed #d9d9d9;      border-radius: 6px;      cursor: pointer;      position: relative;      overflow: hidden;      width:101px;      height:101px;    }    .avatar-uploader .el-upload:hover {      border-color: #409EFF;    }    .avatar-uploader .el-upload .el-upload__input{        display: none;    }    .avatar-uploader-icon {      font-size: 28px;      color: #8c939d;      width: 100px;      height: 100px;      line-height: 100px;      text-align: center;    }    .avatar {      width: 100px;      height: 100px;      display: block;    }  &lt;/style&gt;</pre> </div> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>ElementUI把上传的图片转为Base64</h2> <p>使用组件，然后on-change绑定一个方法来获取文件信息，auto-upload设置为false即可 </p> <div class="ay1code"> <pre class="brush:xhtml;"> &lt;el-upload action='' :on-change="getFile" :limit="1" list-type="picture" :auto-upload="false"&gt;              &lt;el-button size="small" type="primary"&gt;选择图片上传,最多上传一张图片&lt;/el-button&gt;            &lt;/el-upload&gt;</pre> </div> <p>定义methods方法,当上传文件就会触发绑定的函数，然后文件的内容就会绑定到函数的参数里面，这样用file.raw就可以获取文件的内容了。</p> <div class="ay1code"> <pre class="brush:js;">  getFile(file, fileList) {       console.log(file.raw)      },</pre> </div> <p>然后自定义一个方法，用来把图片内容转为base64格式，imgResult就是base64格式的内容了。转为base64字符串要调用h5特性中的FileReader这个api,但是这个api不能return，所以用promise封装一下。</p> <div class="ay1code"> <pre class="brush:js;"> getBase64(file) {        return new Promise(function(resolve, reject) {          let reader = new FileReader();          let imgResult = "";          reader.readAsDataURL(file);          reader.onload = function() {            imgResult = reader.result;          };          reader.onerror = function(error) {            reject(error);          };          reader.onloadend = function() {            resolve(imgResult);          };        });      },</pre> </div> <p>最后调用一下</p> <div class="ay1code"> <pre class="brush:js;"> getFile(file, fileList) {            this.getBase64(file.raw).then(res =&gt; {        console.log(res)        });      },</pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-62477.htm">tf.keras.layers.Conv1D和tf.keras.layers.Conv1DTranspose</a></p>
                                        <p>下一个：<a href="/news/article-63074.htm">Spring的两种依赖注入方式:setter方法注入与构造方法注入</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-63075.htm" title="微服务架构学习与思考(09)：分布式链路追踪系统-dapper论文学习">微服务架构学习与思考(09)：分布式链路追踪系统-dapper论文学习</a></li>
                        <li class="py-2"><a href="/news/article-63664.htm" title="Java权限修饰符">Java权限修饰符</a></li>
                        <li class="py-2"><a href="/news/article-63074.htm" title="Spring的两种依赖注入方式:setter方法注入与构造方法注入">Spring的两种依赖注入方式:setter方法注入与构造方法注入</a></li>
                        <li class="py-2"><a href="/news/article-62478.htm" title="Vue结合ElementUI上传Base64编码后的图片实例_vue.js">Vue结合ElementUI上传Base64编码后的图片实例_vue.js</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-23-clash-v2ray-ss-ssr.htm" title="VPN安卓 | 2月23日21.5M/S|免费Shadowrocket/Clash/SSR/V2ray免费节点订阅分享">VPN安卓 | 2月23日21.5M/S|免费Shadowrocket/Clash/SSR/V2ray免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-61883.htm" title="我喜欢实实在在的人的句子（风雨沙坡头电视剧）新鲜出炉，">我喜欢实实在在的人的句子（风雨沙坡头电视剧）新鲜出炉，</a></li>
                        <li class="py-2"><a href="/news/article-63665.htm" title="常用注解@JsonField、@JsonFormat、@DateTimeFormat区别">常用注解@JsonField、@JsonFormat、@DateTimeFormat区别</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-26-node-share-links.htm" title="VPN安卓 | 2月26日22.3M/S|免费Shadowrocket/SSR/V2ray/Clash免费节点订阅分享">VPN安卓 | 2月26日22.3M/S|免费Shadowrocket/SSR/V2ray/Clash免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-62477.htm" title="tf.keras.layers.Conv1D和tf.keras.layers.Conv1DTranspose">tf.keras.layers.Conv1D和tf.keras.layers.Conv1DTranspose</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-24-free-node-subscribe-links.htm" title="VPN安卓 | 2月24日18M/S|免费Clash/Shadowrocket/SSR/V2ray免费节点订阅分享">VPN安卓 | 2月24日18M/S|免费Clash/Shadowrocket/SSR/V2ray免费节点订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="me-md-auto text-center text-md-start">
                <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">VPN安卓 订阅机场节点官网</a> 版权所有 Powered by WordPress
                </div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/trojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/trojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/trojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>